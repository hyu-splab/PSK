[2024-03-12 05:06:12,836] INFO [QuorumController id=1] Creating new QuorumController with clusterId Rt1RKCsoQdSAn8Q1bKlJZQ. (org.apache.kafka.controller.QuorumController)
[2024-03-12 05:06:12,881] INFO [QuorumController id=1] Becoming the active controller at epoch 1, next write offset 1. (org.apache.kafka.controller.QuorumController)
[2024-03-12 05:06:12,884] WARN [QuorumController id=1] Performing controller activation. The metadata log appears to be empty. Appending 1 bootstrap record(s) in metadata transaction at metadata.version 3.7-IV4 from bootstrap source 'the binary bootstrap metadata file: /tmp/lhg_kraft-combined-logs/bootstrap.checkpoint'. Setting the ZK migration state to NONE since this is a de-novo KRaft cluster. (org.apache.kafka.controller.QuorumController)
[2024-03-12 05:06:12,885] INFO [QuorumController id=1] Replayed BeginTransactionRecord(name='Bootstrap records') at offset 1. (org.apache.kafka.controller.OffsetControlManager)
[2024-03-12 05:06:12,885] INFO [QuorumController id=1] Replayed a FeatureLevelRecord setting metadata version to 3.7-IV4 (org.apache.kafka.controller.FeatureControlManager)
[2024-03-12 05:06:12,886] INFO [QuorumController id=1] Replayed EndTransactionRecord() at offset 4. (org.apache.kafka.controller.OffsetControlManager)
[2024-03-12 05:06:12,982] INFO [QuorumController id=1] Replayed RegisterControllerRecord contaning ControllerRegistration(id=1, incarnationId=HQqlMWAeQsCsHUj2n4WM_A, zkMigrationReady=false, listeners=[Endpoint(listenerName='CONTROLLER', securityProtocol=PLAINTEXT, host='yjkim1', port=9093)], supportedFeatures={metadata.version: 1-19}). (org.apache.kafka.controller.ClusterControlManager)
[2024-03-12 05:06:13,036] INFO [QuorumController id=1] Replayed initial RegisterBrokerRecord for broker 1: RegisterBrokerRecord(brokerId=1, isMigratingZkBroker=false, incarnationId=Jtc9Tm_DSvivnKJOXQzjqw, brokerEpoch=6, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='localhost', port=9092, securityProtocol=0)], features=[BrokerFeature(name='metadata.version', minSupportedVersion=1, maxSupportedVersion=19)], rack=null, fenced=true, inControlledShutdown=false, logDirs=[TWQ9t1m7kJc2bw2RRpFirw]) (org.apache.kafka.controller.ClusterControlManager)
[2024-03-12 05:06:13,157] INFO [QuorumController id=1] Replayed RegisterBrokerRecord modifying the registration for broker 1: RegisterBrokerRecord(brokerId=1, isMigratingZkBroker=false, incarnationId=Jtc9Tm_DSvivnKJOXQzjqw, brokerEpoch=7, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='localhost', port=9092, securityProtocol=0)], features=[BrokerFeature(name='metadata.version', minSupportedVersion=1, maxSupportedVersion=19)], rack=null, fenced=true, inControlledShutdown=false, logDirs=[TWQ9t1m7kJc2bw2RRpFirw]) (org.apache.kafka.controller.ClusterControlManager)
[2024-03-12 05:06:13,196] INFO [QuorumController id=1] The request from broker 1 to unfence has been granted because it has caught up with the offset of its register broker record 7. (org.apache.kafka.controller.BrokerHeartbeatManager)
[2024-03-12 05:06:13,200] INFO [QuorumController id=1] Replayed BrokerRegistrationChangeRecord modifying the registration for broker 1: BrokerRegistrationChangeRecord(brokerId=1, brokerEpoch=7, fenced=-1, inControlledShutdown=0, logDirs=[]) (org.apache.kafka.controller.ClusterControlManager)
[2024-03-12 05:11:50,135] INFO [QuorumController id=1] CreateTopics result(s): CreatableTopic(name='test', numPartitions=-1, replicationFactor=-1, assignments=[], configs=[]): SUCCESS (org.apache.kafka.controller.ReplicationControlManager)
[2024-03-12 05:11:50,136] INFO [QuorumController id=1] Replayed TopicRecord for topic test with topic ID l7MCXoDSRh2XfC0sBJOLDQ. (org.apache.kafka.controller.ReplicationControlManager)
[2024-03-12 05:11:50,136] INFO [QuorumController id=1] Replayed PartitionRecord for new partition test-0 with topic ID l7MCXoDSRh2XfC0sBJOLDQ and PartitionRegistration(replicas=[1], directories=[TWQ9t1m7kJc2bw2RRpFirw], isr=[1], removingReplicas=[], addingReplicas=[], elr=[], lastKnownElr=[], leader=1, leaderRecoveryState=RECOVERED, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
[2024-03-12 05:13:14,008] INFO [QuorumController id=1] Replaying ProducerIdsRecord ProducerIdsRecord(brokerId=1, brokerEpoch=7, nextProducerId=1000) (org.apache.kafka.controller.ProducerIdControlManager)
[2024-03-12 05:15:07,072] INFO [QuorumController id=1] Unfenced broker 1 has requested and been granted a controlled shutdown. (org.apache.kafka.controller.BrokerHeartbeatManager)
[2024-03-12 05:15:07,076] INFO [QuorumController id=1] enterControlledShutdown[1]: changing 1 partition(s) (org.apache.kafka.controller.ReplicationControlManager)
[2024-03-12 05:15:07,076] INFO [QuorumController id=1] Replayed BrokerRegistrationChangeRecord modifying the registration for broker 1: BrokerRegistrationChangeRecord(brokerId=1, brokerEpoch=7, fenced=0, inControlledShutdown=1, logDirs=[]) (org.apache.kafka.controller.ClusterControlManager)
[2024-03-12 05:15:07,154] INFO [QuorumController id=1] The request from broker 1 to shut down has been granted since the lowest active offset 9223372036854775807 is now greater than the broker's controlled shutdown offset 1080. (org.apache.kafka.controller.BrokerHeartbeatManager)
[2024-03-12 05:15:07,154] INFO [QuorumController id=1] Replayed BrokerRegistrationChangeRecord modifying the registration for broker 1: BrokerRegistrationChangeRecord(brokerId=1, brokerEpoch=7, fenced=1, inControlledShutdown=0, logDirs=[]) (org.apache.kafka.controller.ClusterControlManager)
[2024-03-12 05:15:07,615] INFO [QuorumController id=1] writeNoOpRecord: event unable to start processing because of RejectedExecutionException (treated as TimeoutException). (org.apache.kafka.controller.QuorumController)
[2024-03-12 05:15:07,615] INFO [QuorumController id=1] maybeBalancePartitionLeaders: event unable to start processing because of RejectedExecutionException (treated as TimeoutException). (org.apache.kafka.controller.QuorumController)
[2024-03-12 05:22:52,656] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:22:52,687] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-03-12 05:22:52,690] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-03-12 05:22:52,727] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-03-12 05:22:52,730] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-03-12 05:22:52,732] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-03-12 05:22:52,734] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-03-12 05:22:52,744] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2024-03-12 05:22:52,749] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-03-12 05:22:52,754] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-03-12 05:22:52,760] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-03-12 05:22:52,762] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-03-12 05:22:52,762] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-03-12 05:22:52,762] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-03-12 05:22:52,763] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-03-12 05:22:52,765] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-03-12 05:22:52,765] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-03-12 05:22:52,765] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-03-12 05:22:52,765] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-03-12 05:22:52,766] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-03-12 05:22:52,774] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:22:52,775] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:22:52,779] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:22:52,780] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:22:52,780] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:22:52,780] INFO [RequestSendThread controllerId=0] Controller 0 connected to yjkim1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-03-12 05:22:52,781] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:22:52,784] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:22:52,784] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-03-12 05:22:52,789] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-03-12 05:22:52,789] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-03-12 05:22:52,789] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-03-12 05:22:52,790] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-03-12 05:22:52,791] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-03-12 05:22:52,804] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-03-12 05:22:57,806] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-12 05:22:57,807] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-12 05:23:04,093] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-03-12 05:23:04,111] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-03-12 05:23:18,715] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test,Some(6Z6tlrdWT_eTah7VCNXjKg),Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-03-12 05:23:18,716] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2024-03-12 05:24:11,462] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-03-12 05:24:11,462] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-03-12 05:24:11,463] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-03-12 05:24:11,465] TRACE [Controller id=0] All leaders = test-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-03-12 05:24:11,763] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:24:11,763] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:24:11,763] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:24:11,764] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-03-12 05:24:11,764] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-03-12 05:24:11,765] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:24:11,766] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:24:11,766] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-03-12 05:24:11,766] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-03-12 05:24:11,766] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-03-12 05:24:11,768] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-03-12 05:56:26,342] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:56:26,363] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-03-12 05:56:26,365] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-03-12 05:56:26,368] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-03-12 05:56:26,370] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-03-12 05:56:26,372] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-03-12 05:56:26,384] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 53) (kafka.controller.KafkaController)
[2024-03-12 05:56:26,396] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-03-12 05:56:26,407] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-03-12 05:56:26,412] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-03-12 05:56:26,413] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-03-12 05:56:26,414] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-03-12 05:56:26,414] INFO [Controller id=0] Current list of topics in the cluster: HashSet(test) (kafka.controller.KafkaController)
[2024-03-12 05:56:26,414] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-03-12 05:56:26,419] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-03-12 05:56:26,419] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-03-12 05:56:26,419] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-03-12 05:56:26,420] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-03-12 05:56:26,421] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-03-12 05:56:26,429] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:56:26,433] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:56:26,435] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker yjkim1:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to yjkim1:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-12 05:56:26,450] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:56:26,451] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=test,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:56:26,451] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:56:26,453] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:56:26,455] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(test-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:56:26,455] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-03-12 05:56:26,459] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-03-12 05:56:26,459] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-03-12 05:56:26,459] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-03-12 05:56:26,459] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-03-12 05:56:26,460] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-03-12 05:56:26,472] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-03-12 05:56:26,538] INFO [RequestSendThread controllerId=0] Controller 0 connected to yjkim1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-03-12 05:56:31,474] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-12 05:56:31,474] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-12 05:56:31,480] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-03-12 05:56:31,484] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-12 05:56:56,597] WARN [RequestSendThread controllerId=0] Controller 0 epoch 2 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=2, brokerEpoch=53, partitionStates=[LeaderAndIsrPartitionState(topicName='test', partitionIndex=0, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], partitionEpoch=0, replicas=[0], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0)], topicIds={test=6Z6tlrdWT_eTah7VCNXjKg}, liveLeaders=(yjkim1:9092 (id: 0 rack: null))) to broker yjkim1:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-12 05:56:56,699] INFO [RequestSendThread controllerId=0] Controller 0 connected to yjkim1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-03-12 05:57:05,784] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-03-12 05:57:05,785] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-03-12 05:57:05,785] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-03-12 05:57:05,787] TRACE [Controller id=0] All leaders = test-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-03-12 05:57:05,795] WARN [RequestSendThread controllerId=0] Controller 0 epoch 2 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=2, kraftController=false, type=UNKNOWN, brokerEpoch=53, partitionStates=[UpdateMetadataPartitionState(topicName='test', partitionIndex=0, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[])], liveBrokers=UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='yjkim1', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker yjkim1:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-12 05:57:05,896] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker yjkim1:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to yjkim1:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-12 05:57:05,997] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker yjkim1:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to yjkim1:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-12 05:57:06,037] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:57:06,037] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:57:06,037] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-12 05:57:06,038] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-03-12 05:57:06,038] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-03-12 05:57:06,040] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-03-12 05:57:06,041] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-03-12 05:57:06,041] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-03-12 05:57:06,042] WARN [RequestSendThread controllerId=0] Controller 0 epoch 2 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=2, kraftController=false, type=UNKNOWN, brokerEpoch=53, partitionStates=[UpdateMetadataPartitionState(topicName='test', partitionIndex=0, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[])], liveBrokers=UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='yjkim1', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker yjkim1:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:117)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:239)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-12 05:57:06,042] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-03-12 05:57:06,042] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-03-12 05:57:06,042] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-03-12 05:57:06,043] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
