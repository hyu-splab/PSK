[2024-03-19 06:02:34,561] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-03-19 06:02:34,587] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2024-03-19 06:02:34,589] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-03-19 06:02:34,593] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-03-19 06:02:34,595] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-03-19 06:02:34,598] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-03-19 06:02:34,608] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 273) (kafka.controller.KafkaController)
[2024-03-19 06:02:34,619] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-03-19 06:02:34,645] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-03-19 06:02:34,650] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-03-19 06:02:34,651] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-03-19 06:02:34,651] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-03-19 06:02:34,651] INFO [Controller id=0] Current list of topics in the cluster: HashSet(test, my-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-03-19 06:02:34,651] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-03-19 06:02:34,656] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-03-19 06:02:34,656] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-03-19 06:02:34,656] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-03-19 06:02:34,657] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-03-19 06:02:34,658] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-03-19 06:02:34,666] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-03-19 06:02:34,672] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-03-19 06:02:34,673] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker yjkim1:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to yjkim1:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-03-19 06:02:34,706] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-03-19 06:02:34,706] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=my-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-03-19 06:02:34,707] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-03-19 06:02:34,712] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-03-19 06:02:34,714] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, my-topic-0 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-03-19 06:02:34,714] INFO [Controller id=0] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2024-03-19 06:02:34,718] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-03-19 06:02:34,718] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-03-19 06:02:34,718] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-03-19 06:02:34,719] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-03-19 06:02:34,720] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-03-19 06:02:34,738] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-03-19 06:02:34,776] INFO [RequestSendThread controllerId=0] Controller 0 connected to yjkim1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-03-19 06:02:39,740] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:02:39,741] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:02:39,747] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:02:39,749] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:02:41,886] DEBUG [Controller id=0] Delete topics listener fired for topics my-topic to be deleted (kafka.controller.KafkaController)
[2024-03-19 06:02:41,887] INFO [Controller id=0] Starting topic deletion for topics my-topic (kafka.controller.KafkaController)
[2024-03-19 06:02:41,888] INFO [Topic Deletion Manager 0] Handling deletion for topics my-topic (kafka.controller.TopicDeletionManager)
[2024-03-19 06:02:41,889] INFO [Topic Deletion Manager 0] Deletion of topic my-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-03-19 06:02:42,101] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(my-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-03-19 06:02:42,102] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=my-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-03-19 06:02:42,102] INFO [Topic Deletion Manager 0] Handling deletion for topics my-topic (kafka.controller.TopicDeletionManager)
[2024-03-19 06:02:42,163] INFO [Topic Deletion Manager 0] Deletion of topic my-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-03-19 06:02:42,166] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-03-19 06:02:42,168] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-03-19 06:02:42,979] INFO [Controller id=0] New topics: [Set(my-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(my-topic,Some(Goiiayo7Sc-Ecw6gErdarQ),Map(my-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-03-19 06:02:42,980] INFO [Controller id=0] New partition creation callback for my-topic-0 (kafka.controller.KafkaController)
[2024-03-19 06:07:39,749] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:07:39,750] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:07:39,755] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:07:39,756] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:12:39,756] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:12:39,756] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:12:39,760] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:12:39,761] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:14:58,834] DEBUG [Controller id=0] Delete topics listener fired for topics my-topic to be deleted (kafka.controller.KafkaController)
[2024-03-19 06:14:58,834] INFO [Controller id=0] Starting topic deletion for topics my-topic (kafka.controller.KafkaController)
[2024-03-19 06:14:58,834] INFO [Topic Deletion Manager 0] Handling deletion for topics my-topic (kafka.controller.TopicDeletionManager)
[2024-03-19 06:14:58,834] INFO [Topic Deletion Manager 0] Deletion of topic my-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-03-19 06:14:58,836] INFO [RequestSendThread controllerId=0] Controller 0 connected to yjkim1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-03-19 06:14:59,017] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(my-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-03-19 06:14:59,017] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=my-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-03-19 06:14:59,018] INFO [Topic Deletion Manager 0] Handling deletion for topics my-topic (kafka.controller.TopicDeletionManager)
[2024-03-19 06:14:59,100] INFO [Topic Deletion Manager 0] Deletion of topic my-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-03-19 06:14:59,101] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-03-19 06:14:59,102] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-03-19 06:14:59,904] INFO [Controller id=0] New topics: [Set(my-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(my-topic,Some(SUoISGUqTlmMFZj6a3sUng),Map(my-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-03-19 06:14:59,904] INFO [Controller id=0] New partition creation callback for my-topic-0 (kafka.controller.KafkaController)
[2024-03-19 06:16:10,403] DEBUG [Controller id=0] Delete topics listener fired for topics my-topic to be deleted (kafka.controller.KafkaController)
[2024-03-19 06:16:10,403] INFO [Controller id=0] Starting topic deletion for topics my-topic (kafka.controller.KafkaController)
[2024-03-19 06:16:10,403] INFO [Topic Deletion Manager 0] Handling deletion for topics my-topic (kafka.controller.TopicDeletionManager)
[2024-03-19 06:16:10,403] INFO [Topic Deletion Manager 0] Deletion of topic my-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-03-19 06:16:10,590] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(my-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-03-19 06:16:10,590] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=my-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-03-19 06:16:10,590] INFO [Topic Deletion Manager 0] Handling deletion for topics my-topic (kafka.controller.TopicDeletionManager)
[2024-03-19 06:16:10,653] INFO [Topic Deletion Manager 0] Deletion of topic my-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-03-19 06:16:10,656] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-03-19 06:16:10,657] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-03-19 06:16:11,473] INFO [Controller id=0] New topics: [Set(my-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(my-topic,Some(UJj1wPZyQs26y0dxq06Frg),Map(my-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-03-19 06:16:11,473] INFO [Controller id=0] New partition creation callback for my-topic-0 (kafka.controller.KafkaController)
[2024-03-19 06:17:39,761] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:17:39,761] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:17:39,765] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:17:39,765] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:22:39,765] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:22:39,765] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:22:39,769] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:22:39,769] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:27:39,770] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:27:39,770] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:27:39,773] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:27:39,773] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:32:39,773] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:32:39,774] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:32:39,776] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:32:39,776] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:37:39,777] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:37:39,777] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:37:39,780] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:37:39,780] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:42:39,781] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:42:39,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:42:39,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:42:39,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:47:39,783] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:47:39,784] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:47:39,785] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:47:39,785] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:52:39,786] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:52:39,786] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:52:39,788] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:52:39,788] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-03-19 06:57:39,789] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-03-19 06:57:39,789] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-03-19 06:57:39,790] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-03-19 06:57:39,790] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
